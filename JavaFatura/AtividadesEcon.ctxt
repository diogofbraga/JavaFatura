#BlueJ class context
comment0.target=AtividadesEcon
comment1.params=
comment1.target=AtividadesEcon()
comment1.text=\r\n\ Construtor\ vazio\ de\ AtividadesEcon.\r\n
comment10.params=ae
comment10.target=void\ addAtividade(AtividadeEcon)
comment10.text=\r\n\ M\u00E9todo\ que\ adiciona\ uma\ atividade\ econ\u00F3mica\ \u00E0\ lista\ de\ atividades.\r\n\ \r\n\ @param\ ae\ AtividadeEcon\r\n
comment11.params=ae
comment11.target=boolean\ contains_(AtividadeEcon)
comment11.text=\r\n\ \r\n\ M\u00E9todo\ que\ verifica\ se\ uma\ atividade\ econ\u00F3mica\ pertence\ \u00E0\ lista.\ \r\n\ \r\n\ @param\ ae\ Atividade\ Econ\u00F3mica\ a\ verificar.\r\n
comment12.params=nomeFicheiro
comment12.target=AtividadesEcon\ loadTA(java.lang.String)
comment12.text=\r\n\ M\u00E9todo\ que\ carrega\ a\ estrutura\ das\ atividades\ econ\u00F3micas.\r\n\ \r\n\ @param\ nomeFicheiro\ Nome\ do\ ficheiro\ com\ a\ estrutura.\r\n\ \r\n\ @return\ Estrutura\ AtividadesEcon\r\n
comment13.params=nomeFicheiro
comment13.target=void\ guardaTA(java.lang.String)
comment13.text=\r\n\ M\u00E9todo\ que\ guarda\ o\ estado\ da\ estrutura\ AtividadesEcon.\r\n\ \r\n\ @param\ nomeFicheiro\ Nome\ do\ ficheiro\ com\ a\ estrutura\ AtividadesEcon.\r\n\ \r\n
comment2.params=novos
comment2.target=AtividadesEcon(java.util.Map)
comment2.text=\r\n\ Construtor\ parametrizado\ de\ AtividadesEcon.\r\n
comment3.params=ae
comment3.target=AtividadesEcon(AtividadesEcon)
comment3.text=\r\n\ Construtor\ de\ c\u00F3pia\ de\ AtividadesEcon.\r\n
comment4.params=natureza
comment4.target=AtividadeEcon\ getAtividadeEcon(java.lang.String)
comment4.text=\r\n\ M\u00E9todo\ que\ devolve\ a\ atividade\ ec\u00F3nomica\ com\ determinada\ natureza.\r\n\ \r\n\ @param\ natureza\ Natureza\ da\ atividade.\r\n\ \ \r\n\ @return\ Atividade\ econ\u00F3mica\r\n
comment5.params=
comment5.target=java.util.List\ getAtividadeEcon()
comment5.text=\r\n\ M\u00E9todo\ que\ devolve\ uma\ lista\ das\ atividades\ econ\u00F3micas.\r\n\ \r\n\ @param\ natureza\ Natureza\ da\ atividade.\r\n\ \ \r\n\ @return\ Atividade\ econ\u00F3mica\r\n
comment6.params=
comment6.target=java.util.Map\ getAtividadesEcon()
comment6.text=\r\n\ M\u00E9todo\ que\ devolve\ um\ Map\ com\ a\ natureza\ e\ a\ atividade\ econ\u00F3mica.\r\n\ \r\n\ \ \r\n\ @return\ Mapa\ com\ natureza\ e\ atividade\ econ\u00F3mica.\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\r\n\ Implementa\u00E7\u00E3o\ do\ m\u00E9todo\ toString.\r\n\ \r\n\ @return\ Uma\ String\ com\ informa\u00E7\u00E3o\ textual\ do\ objeto\ AtividadesEcon.\r\n
comment8.params=o
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=\r\n\ Implementa\u00E7\u00E3o\ do\ m\u00E9todo\ de\ igualdade\ entre\ duas\ AtividadesEcon.\r\n\ \r\n\ @param\ o\ AtividadesEcon\ que\ \u00E9\ comparada\ com\ o\ recetor\r\n\ @return\ Booleano\ True\ ou\ False.\r\n
comment9.params=
comment9.target=AtividadesEcon\ clone()
comment9.text=\r\n\ M\u00E9todo\ de\ clonagem\ de\ uma\ AtividadesEcon.\r\n\ \r\n\ @return\ Objeto\ do\ tipo\ AtividadesEcon.\r\n
numComments=14
